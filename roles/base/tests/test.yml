#SPDX-License-Identifier: MIT-0
---
- name: Base role test
  hosts: all
  become: yes
  roles:
    - base

  tasks:
    - name: Check if the APT package cache was updated
      ansible.builtin.apt:
        update_cache: yes
      register: apt_update

    - name: Display APT update result
      ansible.builtin.debug:
        var: apt_update

    - name: Check if all installed packages were upgraded
      ansible.builtin.apt:
        upgrade: dist
      register: apt_upgrade_simulation

    - name: Display APT upgrade simulation result
      ansible.builtin.debug:
        var: apt_upgrade_simulation.stdout_lines
    
    - name: Collect package facts
      ansible.builtin.package_facts:
        manager: apt

    - name: Verify installed base packages with specific versions
      ansible.builtin.assert:
        that:
          - item.name in ansible_facts.packages
          - ansible_facts.packages[item.name][0].version == item.version
        msg: >
          "Package {{ item.name }} does not match expected version {{ item.version }}!"
      with_items: "{{ base_packages }}"
        
    # - name: Verify installed base packages with specific versions
    #   ansible.builtin.shell:
    #     cmd: >
    #       bash -c "set -o pipefail &&
    #       dpkg -l | grep -E '{{ item.name }}' | grep '{{ item.version }}'"
    #   loop: "{{ base_packages }}"
    #   register: package_version_check
    #   changed_when: false
    #   failed_when: package_version_check.stdout_lines | length == 0

    - name: Display base package version check results
      ansible.builtin.debug:
        msg: >
          "Package: {{ item.name }} - Installed Version Matches: {{ item.version }}"
      with_items: "{{ base_packages }}"

    - name: Display base package installation check result
      ansible.builtin.debug:
        var: package_check.stdout_lines

    - name: Check if a reboot is needed
      ansible.builtin.stat:
        path: /var/run/reboot-required
      register: reboot_check

    - name: Display reboot status
      ansible.builtin.debug:
        msg: >
          "Reboot is {{ 'required' if reboot_check.stat.exists else 'not required' }}."